표준스트림

#1. 리다이렉션
표준스트림이란?
파일을 읽고 쓰는 과정처럼 ㅔ이터를 압축하는 것.
데이터가 연속적으로 흐른다는 특징
키보드 -> 운영체제 -> 디스플레이
stdin
stdout
stderr
out/err 다른 방식으로(루트로) 출력된다.

리다이렉션이란?
입출력 방향을 다른 곳으로 바꾼
키보드에서 입력받지 않고 파일에서 받는 것
디스플레이로 받지 않고 파일로 씀
예; ls -l>파일로 저장한다.

리다이렉션은 셸의 역할이다.(운영체제와 파일을 연결하는 작업)

1) 출력 리다이렉션
-출력 내용을 표준 출력이 아닌 파일로 보내 저장하는 것
기호는 >

syntax : 명령 > 파일이름
grep Perl animals.txt > perl.txt
결과:

##cat
concatenate :"연속으로"이어 붙인다.
-cat파일 이름 1, 2, 3, ....
파일 1+2+3...
파일 1 2
하나 이상의 파일을 다른 여러 종류의 파일과 연결할 때 많이 사용된다.
파일 복사, 합침...
-추가 기호는 >>

2) 입력 리다이렉션
명령<파일
-wc animals.txt : 프로그램이 파일의 존재를 알고 있음
- wc< animals.txt: 리다이렉션 때문에 프로그램이 파일 존재 모름

3) 리다이렉션이 불가능하 출력
표준오류는 리다이렉션이 불가능하다.
단 표준오류도 기호 앞에 2를 붙인다면 '2>' 리다이렉션이 가능하다
2>> : 추가(이어쓰기)
표준 출력과 오류를 같이 리다이렉션하려면? &>

예: 존재하는 파일과 존재하지 않는 파일 모두 읽어서 새로운 파일 만들자
line1.txt non.txt -> line2.txt
모두 리다이렉션하라

답: cat line1.txt non.txt 2>> line2.txt

4) 입출력 모두 다 같이
-명령<입력파일>출력파일
Q. animals.txt 에서 Perl라인의 글자(character) 수 세고 결과를 파일(result)로 입력도 한번에
A. grep Perl < animals.txt | wc -c > result

#2 Escape Letters
특정 문자가 가지고 있는 기능을 차단하게 해주는 기능
예: 역슬래시, 백슬래시

1) ''
제일 강력한 역할
안에 있는 모든 기능 해제함
에: $HOME(문자 그대로 출력)

2) ""
일부 기능은 해제하지 않는다.

3) 백슬래시
일부분을 지정해서 기능 해제(문자 그대로 읽게함)

큰 따옴표 안에 큰 따옴표를 사용하려면?
백슬래쉬를 사용한다
EX) "home sweet home(백슬래시)""
=> home sweet home"

명령 줄 바꿔쓰기 할 때 많이 쓴다. 


#3 검색경로
#4 초기화 파일


#5 명령 히스토리
command history
우리가 커맨드라인에 입력한 명령들을 셸이 저장해서 가지고 있다.
히스토리를 사용해서 이전 명령을 불러와 재사용하는 기능을 익힌다.

1) 히스토리 열람
history
LIFO(last in first out)
history 10

Q. 히스토리를 가장 처음부터 10개 출력하기 (1-10) + 한 화면에
Q. 전체 히스토리에서 echo만 출력하기
history | head
echo.....
history -c

2) 재사용
1. 커서링
2. 히스토리 확장
3. 증분 검색

(1) 커서링
위 아래 키를 사용하여 히스토리 열람
간단하지만 느림
 이전 2-3개 명령일 경우 사용
입력한 역순으로 이전 명령을 불러옴

몇개까지?
$HISTSIZE = -1 #무한저장

반복되는 명령은?
$HISTCONTROL = ignoredups #중복되는 명령어 하나만 저장

모든 명령 히스토리는 $HISTFILE에 저장된다

(2) 히스토리 확장
특별한 표현식을 활용하는 방법
명령을 가져오고 실행까지 함
!! : 이전명령
!<명령어> : 가장 마지막에 한 특정 명령 가져와서 실행
!70 (히스토리 번호)
!-3

장점: 쉽다
단점: 실행까지 되기 때문에 조심할 것
: p -확인
!!
!70:p -> !!

Q. 이전 명령의 단어(word)수 세기 (표현식 활용)
!! | wc -w
!!:p | wc -w

stout으로 활용할 수 있다는 점

파일 삭제할 때
!$ : 이전 명령의 마지막 내용(인수)
-head grades2 ($)
-alias rm='rm-i #삭제하기 전에 확인하라
(위에걸 쓰는게 더 편함)
!* : 인수 2개 이상일경우 매칭

(3) 증분검색
ctrl + R
enter
ctrl + j, c, 
ESC
